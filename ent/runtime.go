// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/rosstimothy/iam/ent/permission"
	"github.com/rosstimothy/iam/ent/role"
	"github.com/rosstimothy/iam/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	permissionFields := schema.Permission{}.Fields()
	_ = permissionFields
	// permissionDescName is the schema descriptor for name field.
	permissionDescName := permissionFields[0].Descriptor()
	// permission.NameValidator is a validator for the "name" field. It is called by the builders before save.
	permission.NameValidator = permissionDescName.Validators[0].(func(string) error)
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescName is the schema descriptor for name field.
	roleDescName := roleFields[0].Descriptor()
	// role.NameValidator is a validator for the "name" field. It is called by the builders before save.
	role.NameValidator = roleDescName.Validators[0].(func(string) error)
	// roleDescTitle is the schema descriptor for title field.
	roleDescTitle := roleFields[1].Descriptor()
	// role.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	role.TitleValidator = roleDescTitle.Validators[0].(func(string) error)
	// roleDescStage is the schema descriptor for stage field.
	roleDescStage := roleFields[3].Descriptor()
	// role.StageValidator is a validator for the "stage" field. It is called by the builders before save.
	role.StageValidator = roleDescStage.Validators[0].(func(int) error)
}
